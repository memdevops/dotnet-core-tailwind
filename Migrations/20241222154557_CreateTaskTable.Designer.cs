// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcProject.Web.Data;

#nullable disable

namespace MvcProject.web.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241222154557_CreateTaskTable")]
    partial class CreateTaskTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MvcProject.Web.Models.TaskModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CommentsCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommentsCount = 12,
                            DueDate = new DateTime(2024, 1, 15, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Priority = "High",
                            Tags = "[\"Marketing\",\"Presentation\"]",
                            Title = "Prepare Marketing Presentation"
                        },
                        new
                        {
                            Id = 2,
                            CommentsCount = 8,
                            DueDate = new DateTime(2024, 1, 10, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Priority = "Urgent",
                            Tags = "[\"Finance\",\"Report\"]",
                            Title = "Submit Financial Report"
                        },
                        new
                        {
                            Id = 3,
                            CommentsCount = 4,
                            DueDate = new DateTime(2024, 1, 18, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Priority = "Medium",
                            Tags = "[\"Meeting\",\"Team\"]",
                            Title = "Team Meeting Preparation"
                        },
                        new
                        {
                            Id = 4,
                            CommentsCount = 6,
                            DueDate = new DateTime(2024, 1, 22, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Priority = "Low",
                            Tags = "[\"Software\",\"Documentation\"]",
                            Title = "Update Software Documentation"
                        },
                        new
                        {
                            Id = 5,
                            CommentsCount = 3,
                            DueDate = new DateTime(2024, 1, 12, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Priority = "High",
                            Tags = "[\"Client\",\"Follow-up\"]",
                            Title = "Client Follow-up Calls"
                        },
                        new
                        {
                            Id = 6,
                            CommentsCount = 0,
                            DueDate = new DateTime(2024, 1, 25, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Priority = "Low",
                            Tags = "[\"Organization\",\"Workspace\"]",
                            Title = "Organize Workspace"
                        },
                        new
                        {
                            Id = 7,
                            CommentsCount = 15,
                            DueDate = new DateTime(2024, 1, 5, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Priority = "Urgent",
                            Tags = "[\"Product\",\"Launch\"]",
                            Title = "Product Launch Planning"
                        });
                });

            modelBuilder.Entity("MvcProject.Web.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@example.com",
                            Name = "Admin",
                            Role = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Email = "user1@example.com",
                            Name = "User1",
                            Role = "User"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
